package om.snion.mybatis;

import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.apache.ibatis.session.SqlSession;
import org.junit.Test;

import com.snion.entity.MyClass;
import com.snion.entity.MyClassMapper;
import com.snion.entity.Student;
import com.snion.entity.StudentMapper;
import com.snion.util.SqlSessionFactoryUtils;

public class MybatisTest {
	//@Test
	public void testdemo() throws IOException {
//		//创建SqlSessionFactoryBuilder对象
//		SqlSessionFactoryBuilder ssfb = new SqlSessionFactoryBuilder();
//		//1. 加载核心配置文件（创建核心配置文件的输入流对象
//		InputStream inputStream = Resources.getResourceAsStream("SqlMapConfig.xml");
//		//2. 创建SqlSessionFactory对象（通过核心配置文件的输入流对象创建SqlSessionFactory对象）
//		SqlSessionFactory sqlSessionFactory = ssfb.build(inputStream);
//		//3. 创建SqlSession对象，调用其API，得到一个结果集
//		//创建SqlSession对象
//		//SqlSession sqlSession = sqlSessionFactory.openSession();
//		用 SqlSessionFactoryUtils 执行以上部分，直接获得 sqlSession
		
		SqlSession sqlSession = (SqlSession) SqlSessionFactoryUtils.getSqlSession();
		
		//获取接口的代理实现类
		StudentMapper mapper = sqlSession.getMapper(StudentMapper.class);
//		Student student = mapper.getStudentById(1001);
//		System.out.println(student);
		//Student student = new Student(9993,"梦洁", "女", 21, 2001);
//		System.out.println(mapper.insertStudent(student));
//		List<Integer> list = new ArrayList<>();
//		list.add(9991);

//		System.out.println(mapper.deletetStudentsById(list));
		//List<Student> students  = sqlSession.selectList("getAllStudent");
		//效果同下
//		List<Student> students  = mapper.getAllStudent();
//		//输出结果
//		for (Student student1 : students) {
//			System.out.println(student1);
//		}

		//释放资源
		sqlSession.close();
	}
	
	public void testdemo2() throws IOException {
		SqlSession sqlSession = (SqlSession) SqlSessionFactoryUtils.getSqlSession();
		//获取接口的代理实现类
		MyClassMapper mapper = sqlSession.getMapper(MyClassMapper.class);
		List<MyClass> myClass  = mapper.getMyClass();
		for (MyClass myclass : myClass) {
			System.out.println(myClass.get);
		}
		
		//释放资源
		sqlSession.close();
	}
}
