<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
	PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
	<mapper namespace="com.snion.mapper.StudentMapper">
	<!-- 
		Mapper.xml文件中的namespace与Mapper接口的类路径相同，即namespace必须是接口的全限定名；
		Mapper接口的方法名和Mapper.xml文件中定义的每个Statement的id相同；
		Mapper接口方法的输入参数类型和Mapper.xml文件中定义的每个SQL的parameterType的类型相同；
		Mapper接口方法的输出参数类型和Mapper.xml文件中定义的每个SQL的resultType的类型相同。
	 -->
		<select id="getStudentById" parameterType="int" resultType="com.snion.entity.Student" >
			select 
				id, name, sex, age, tch_id
			from
				students
			where id = #{value}
			<!-- where id > #{value} -->
		</select>
		
		<select id="getStudentByName" parameterType="String" resultType="com.snion.entity.Student" >
			select 
				id, name, sex, age, tch_id
			from
				students
			where name = #{value}
		</select>
		
		<insert id="insertStudent" parameterType="com.snion.entity.Student" >
			insert into students(
				id, name, sex, age, tch_id)
			value(
				#{id}, #{name}, #{sex}, #{age}, #{tch_id})
		</insert>
		
		<delete id="deletetStudentById" parameterType="int">
			delete from students where id = #{value}
		</delete>
		
		<delete id="deletetStudentsById" parameterType="int">
			delete from students where id in (
			<!-- open前缀  close后缀 -->
			<foreach collection="list" item="item" separator="," open="" close=")">
				#{item}
			</foreach>
		</delete>
		<!-- 如果查询结果返回的是List集合，那么resultType属性的值只需要设置为List集合中的一个元素的数据类型即可 -->
		<select id="getAllStudent" resultType="com.snion.entity.Student" >
			select * from students
		</select>
		
	</mapper>
