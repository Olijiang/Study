/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.37
 * Generated at: 2022-08-08 10:04:07 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class resetpwd_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP 只允许 GET、POST 或 HEAD。Jasper 还允许 OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\r\n");
      out.write("<html lang=\"en\">\r\n");
      out.write("<head>\r\n");
      out.write("    <meta charset=\"UTF-8\">\r\n");
      out.write("    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\r\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n");
      out.write("    <title>Reset Password</title>\r\n");
      out.write("\r\n");
      out.write("    <style>\r\n");
      out.write("\t\tbody{\t\t\t\r\n");
      out.write("\t\t\twidth: 99%;\r\n");
      out.write("\t\t\theight: 99%;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t.box{\r\n");
      out.write("\t\t\tmargin: auto;\r\n");
      out.write("\t\t\tmargin-top: 50px;\r\n");
      out.write("\t\t\twidth: 350px;\r\n");
      out.write("\t\t\theight: 300px;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t.iput{\r\n");
      out.write("\t\t\theight: 40px;\r\n");
      out.write("\t\t\twidth: 230px;\r\n");
      out.write("\t\t\tmargin: 10px;\r\n");
      out.write("\t\t\tborder-radius: 5px;\r\n");
      out.write("\t\t\tborder: solid 1px aquamarine;\r\n");
      out.write("\t\t\tfont-size: 20px;\r\n");
      out.write("\t\t\tpadding-left: 8px;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\tinput::placeholder{\r\n");
      out.write("\t\t\tcolor: pink;\r\n");
      out.write("\t\t\tfont-size: 15px;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t.iput:focus{\r\n");
      out.write("\t\t\tborder-style:solid;\r\n");
      out.write("\t\t\tborder-color: #03a9f4;\r\n");
      out.write("\t\t\tbox-shadow: 0 0 10px #03a9f4;\r\n");
      out.write("\t\t\toutline-color: transparent;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t.but:active{\r\n");
      out.write("\t\t\ttransform: translateY(2px);\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t.but:focus{\r\n");
      out.write("\t\t\tbox-shadow: 0 0 10px #03a9f4;\r\n");
      out.write("\t\t\toutline-color: transparent;\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t.but{\r\n");
      out.write("\t\t\tbackground-color: aquamarine;\r\n");
      out.write("\t\t\theight: 40px;\r\n");
      out.write("\t\t\twidth: 100px;\r\n");
      out.write("\t\t\tmargin: 10px;\r\n");
      out.write("\t\t\tborder-radius: 10px;\r\n");
      out.write("\t\t\tborder: transparent;\r\n");
      out.write("\t\t\tfont-size: 25px;\r\n");
      out.write("\t\t\tmargin-left: 80px;\r\n");
      out.write("\t\t}\r\n");
      out.write("        #cbut{\r\n");
      out.write("            height: 30px;\r\n");
      out.write("            border-radius: 10px;\r\n");
      out.write("            background-color: aquamarine;\r\n");
      out.write("\t\t\tborder-radius: 10px;\r\n");
      out.write("\t\t\tborder: transparent;\r\n");
      out.write("\t\t\tfont-size: 12px;\r\n");
      out.write("        }\r\n");
      out.write("        #cbut:active{\r\n");
      out.write("\t\t\ttransform: translateY(2px);\r\n");
      out.write("\t\t}\r\n");
      out.write("        #cbut:focus{\r\n");
      out.write("\t\t\tbox-shadow: 0 0 10px #03a9f4;\r\n");
      out.write("\t\t\toutline-color: transparent;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t.tink{\r\n");
      out.write("\t\t\tfloat:left;\r\n");
      out.write("\t\t\tbackground-color: #03a9f4;\r\n");
      out.write("\t\t\twidth: 350px;\r\n");
      out.write("\t\t\theight: 300px;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t.tips{\r\n");
      out.write("\t\t\tmargin: 12px;\r\n");
      out.write("\t\t\tposition: relative;\r\n");
      out.write("\t\t\tfont-size: 10px;\r\n");
      out.write("\t\t\tcolor: red;\r\n");
      out.write("\t\t\tword-break:keep-all;      /* 不换行 */\r\n");
      out.write("            white-space:nowrap;       /* 不换行 */\r\n");
      out.write("\t\t}\r\n");
      out.write("        .title{\r\n");
      out.write("            margin: auto;\r\n");
      out.write("            margin-top: 10%;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        h1{\r\n");
      out.write("\t\t\tfont-size: 50px;\r\n");
      out.write("\t\t\tcolor: aquamarine;\r\n");
      out.write("            text-align: center;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\ta{\r\n");
      out.write("            word-break:keep-all;      /* 不换行 */\r\n");
      out.write("            white-space:nowrap;       /* 不换行 */\r\n");
      out.write("            padding: 2px;\r\n");
      out.write("\t\t\tfont-size: 12px;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t</style>\r\n");
      out.write("</head>\r\n");
      out.write("\r\n");
      out.write("<body>\r\n");
      out.write("    <div class=\"title\">\r\n");
      out.write("        <h1>Reset Password</h1>\r\n");
      out.write("    </div>\r\n");
      out.write("\t<div class=\"box\">\r\n");
      out.write("        <form id=\"myform\" action=\"\" method=\"post\" >\r\n");
      out.write("\r\n");
      out.write("            <input class=\"iput\" type=\"password\" id=\"pwd\" name=\"pwd\" placeholder=\"请输入密码\" autocomplete=\"off\"><br>\r\n");
      out.write("            <span id=\"tip1\" class=\"tips\"></span> <br>\r\n");
      out.write("            <input class=\"iput\" type=\"password\" id=\"pwd1\" name=\"pwd1\" placeholder=\"请再次输入密码\" autocomplete=\"off\"><br>\r\n");
      out.write("            <span id=\"tip2\" class=\"tips\"></span> <br>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("            <input  class=\"but\" type=\"button\" value=\"OK\" onclick=\"return check()\">\r\n");
      out.write("            \r\n");
      out.write("        </form>\r\n");
      out.write("\t</div>\r\n");
      out.write("\r\n");
      out.write("    <script type=\"text/javascript\" src=\"https://code.jquery.com/jquery-3.4.1.min.js\"> </script>\r\n");
      out.write("\t\r\n");
      out.write("\t<script type=\"text/javascript\" >\r\n");
      out.write("\t\twindow.history.replaceState(null, null, window.location.href);\r\n");
      out.write("\t\tvar mcode=\"\"\r\n");
      out.write("\r\n");
      out.write("\t\tfunction check(){\r\n");
      out.write("\t\t\tlet pwdRegExp=/[a-zA-Z0-9_]{4,18}/\r\n");
      out.write("            let pwd = document.getElementById(\"pwd\")\r\n");
      out.write("            let pwd1 = document.getElementById(\"pwd1\")\r\n");
      out.write("            let tip1 = document.getElementById(\"tip1\")\r\n");
      out.write("            let tip2 = document.getElementById(\"tip2\")\r\n");
      out.write("            tip1.innerHTML = \"\" \r\n");
      out.write("            tip2.innerHTML = \"\" \r\n");
      out.write("\r\n");
      out.write("            if(pwd.value==\"\"){ \r\n");
      out.write("\t\t\t\ttip1.innerHTML = \"请输入密码\" \r\n");
      out.write("\t\t\t\treturn false\r\n");
      out.write("            }\r\n");
      out.write("\r\n");
      out.write("            if(pwd1.value==\"\"){ \r\n");
      out.write("\t\t\t\ttip2.innerHTML = \"请输入密码\" \r\n");
      out.write("\t\t\t\treturn false\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t\tif(!pwdRegExp.test(pwd.value)){ \r\n");
      out.write("\t\t\t\ttip1.innerHTML = \"密码只能由数字、字母、下划线组成\" \r\n");
      out.write("\t\t\t\treturn false\r\n");
      out.write("\t\t\t}\r\n");
      out.write("            if(pwd.value!=pwd1.value){ \r\n");
      out.write("\t\t\t\ttip2.innerHTML = \"两次密码不一致\" \r\n");
      out.write("\t\t\t\treturn false\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\r\n");
      out.write("            $.ajax({\r\n");
      out.write("                type: \"POST\",   //提交的方法\r\n");
      out.write("                url:\"http://localhost:8080/SSM/resetpwd\", //提交的地址  \r\n");
      out.write("                data:$('#myform').serialize(),// 序列化表单值  \r\n");
      out.write("                async: false, \t//同步 \r\n");
      out.write("                error: function(request) {  //失败的话\r\n");
      out.write("                    alert(\"服务器链接中断\");  \r\n");
      out.write("                },  \r\n");
      out.write("                success: function(data) {  //成功\r\n");
      out.write("                    if(data==\"FF\"){\r\n");
      out.write("                    \ttip1.innerHTML = \"非法访问, 好自为之\" \r\n");
      out.write("                    }\r\n");
      out.write("                    else{\r\n");
      out.write("                    \talert(\"修改成功\")\r\n");
      out.write("                    \twindow.location.href = data\r\n");
      out.write("                    }\r\n");
      out.write("                }\r\n");
      out.write("            });\r\n");
      out.write("        }\r\n");
      out.write("\t    \r\n");
      out.write("\t</script>\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
